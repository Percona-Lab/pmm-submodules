on:
  workflow_dispatch:
    inputs:
      server_image:
        description: 'server image: repo/name:tag'
        required: true
        type: string
      client_image:
        description: 'client image: repo/name:tag'
        required: true
        type: string
      sha:
        description: 'commit sha to report status'
        required: false
        type: string

jobs:

  helm-tests:
    runs-on: ubuntu-latest
    env:
      WORK_DIR: /home/runner/work/pmm-submodules/pmm-submodules/sources/pmm-qa/src/github.com/percona/pmm-qa/pmm-tests

    steps:

      - name: checkout code
        uses: percona-platform/checkout@v3
        with:
          submodules: 'recursive'

      - name: install npm
        uses: percona-platform/setup-node@v3
        with:
          node-version: '14'

      - name: install tools
        run: |
          npm install -g bats
          $WORK_DIR/install_k8s_tools.sh --minikube --helm --kubectl --user

      - name: minikube_start
        run: |
          minikube start
          kubectl wait --for=condition=Ready node --timeout=90s minikube

      - name: helm_tests
        run: |
          echo $(git submodule status)

          cd $WORK_DIR
          
          export IMAGE_REPO=$(echo $SERVER_IMAGE | cut -d ':' -f 1)
          export IMAGE_TAG=$(echo $SERVER_IMAGE | cut -d ':' -f 2)
          bats --tap pmm-2-0-bats-tests/helm-test.bats
        env:
          SERVER_IMAGE: ${{ inputs.server_image }}

      - name: Create status check
        if: ${{ always() }}
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
          SHA: ${{ inputs.sha }}
          STATUS: ${{ job.status }}
        run: |
          if [ "${STATUS}" = "cancelled" ]; then
            STATUS="error"
          fi

          gh api \
            --method POST \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/$REPO/statuses/$SHA \
            -f state="$STATUS" \
            -f target_url="https://github.com/$REPO/actions/runs/$RUN_ID" \
            -f description="Helm Tests status: $STATUS" \
            -f context='actions/workflows/helm-tests'
  ui-tests:
      runs-on: ubuntu-latest
      timeout-minutes: 50
      env:
        WORK_DIR: /home/runner/work/pmm-submodules/pmm-submodules/sources/pmm-ui-tests/src/github.com/percona/pmm-ui-tests

      steps:
        - name: Checkout Code
          uses: percona-platform/checkout@v3
          with:
            submodules: 'recursive'

        - name: Install Node 14
          uses: percona-platform/setup-node@v3
          with:
            node-version: '14'
            working-directory: ${{ env.WORK_DIR }}

        - name: Install dependencies 
          working-directory: ${{ env.WORK_DIR }}
          run: |
            npm ci

        - name: Run UI tests
          working-directory: ${{ env.WORK_DIR }}
          env:
            PMM_SERVER_IMAGE: ${{ inputs.server_image }}
          run: npm run e2e:ia

        - name: Create status check
          if: ${{ always() }}
          continue-on-error: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            REPO: ${{ github.repository }}
            RUN_ID: ${{ github.run_id }}
            SHA: ${{ inputs.sha }}
            STATUS: ${{ job.status }}
          run: |
            if [ "${STATUS}" = "cancelled" ]; then
              STATUS="error"
            fi
  
            gh api \
              --method POST \
              -H "Accept: application/vnd.github.v3+json" \
              /repos/$REPO/statuses/$SHA \
              -f state="$STATUS" \
              -f target_url="https://github.com/$REPO/actions/runs/$RUN_ID" \
              -f description="UI Tests status: $STATUS" \
              -f context='actions/workflows/ui-tests'
