#!/bin/bash

set -o errexit
set -o xtrace

. $(dirname $0)/vars

prepare_tarball() {
    local repo_name=$1
    if [ $repo_name = 'pmm-submodules' ]; then
        mkdir -p ${root_dir}/sources/${repo_name}
        git_dir="${root_dir}/sources/${repo_name}"
    else
        local git_dir=$(dirname $(find "${root_dir}/sources/${repo_name}" -name .git | head -1))
    fi
    local commit=$(git -C "${git_dir}" rev-parse --short HEAD)
    local tarball=${source_dir}/${repo_name}-${commit}.tar.gz
    local repo_var=$(
        echo "${repo_name}_commit" \
            | sed -e 's:-:_:g' \
            | tr '[[:lower:]]' '[[:upper:]]'
    )
    echo "${repo_var}=$commit" >> ${client_properties}

    if [ -f "${tarball}" ]; then
        echo ${tarball} already exists, skipping build
    else
        if [ ${repo_name} = 'pmm-submodules' ]; then
            cp -r build/debian ${git_dir}/
            cp -r build/rpm ${git_dir}/
            cp -r build/config ${git_dir}/
            cp -f build/bin/install_tarball ${git_dir}/
            tar -C sources -zcf ${repo_name}-${commit}.tar.gz  ${repo_name}
            mv ${repo_name}-${commit}.tar.gz  ${source_dir}/
        else
            git -C "${git_dir}" archive \
                --format=tar.gz \
                --prefix=${repo_name}-${commit}/ \
                -o ${tarball} \
                "${commit}"
        fi
    fi
}

repack_toolkit() {
    if tar -ztf ${source_dir}/percona-toolkit-*.tar.gz | grep '/vendor/'; then
        echo skip percona-toolkit repack
        return
    fi

    tar \
        -C ${tmp_dir}/source \
        -zxpf ${source_dir}/percona-toolkit-*.tar.gz

    pushd ${tmp_dir}/source/percona-toolkit-*
        docker run --rm -v $(pwd -P):/home/builder/go/src/percona-toolkit ${rpmbuild_docker_image} sh -c "
            set -o errexit
            set -o xtrace

            export GOPATH=/home/builder/go
            sudo chown -R builder:builder \$GOPATH
            pushd /home/builder/go/src/percona-toolkit
                wget --directory-prefix \$GOPATH/bin https://github.com/golang/dep/releases/download/v0.5.4/dep-linux-amd64
                chmod +x \$GOPATH/bin/dep-linux-amd64
                \$GOPATH/bin/dep-linux-amd64 ensure -v
            popd
            sudo chown -R $(id -u):$(id -g) \$GOPATH
        "
    popd

    # Run tar inside docker because macOS tar is not gnu compatible on update operation
    docker run --rm -v ${root_dir}:/home/builder/root ${rpmbuild_docker_image} sh -c "
        set -o errexit
        set -o xtrace

        source_dir=/home/builder/root/tmp/source/pmm2-client-${pmm_version}
        sudo chown -R builder:builder \${source_dir} /home/builder/root/tmp
        pushd /home/builder/root/tmp/source
            gunzip -f \${source_dir}/percona-toolkit-*.tar.gz
            tar \
                -upf \${source_dir}/percona-toolkit-*.tar \
                percona-toolkit-*/vendor
            gzip -f \${source_dir}/percona-toolkit-*.tar
        popd
        sudo chown -R $(id -u):$(id -g) \${source_dir} /home/builder/root/tmp
    "
}

prepare_vmagent_tarball() {
    local repo_name=vmagent
    local commit_hash=${VMAGENT_COMMIT:-cf5f2874cd0c0e13dab44210c1f6a3230a29ddc5}
    local commit_short=${commit_hash::6}
    local tarball=${source_dir}/${repo_name}-${commit_short}.tar.gz
    local repo_var=$(
        echo "${repo_name}_commit" \
            | sed -e 's:-:_:g' \
            | tr '[[:lower:]]' '[[:upper:]]'
    )
    echo "${repo_var}=$commit_short" >> ${client_properties}

   if [ -f "${tarball}" ]; then
       echo ${tarball} already exists, skipping build
   else
       wget https://github.com/VictoriaMetrics/VictoriaMetrics/archive/${commit_hash}.tar.gz -O ${tarball}
   fi
}

main() {
    rm -rf ${source_tarball}
    mkdir -p ${source_dir}/ $(dirname ${source_tarball}) || :
    echo "PMM_SUBMODULES_COMMIT=$(git rev-parse --short HEAD)" > ${client_properties}

    prepare_vmagent_tarball
    prepare_tarball pmm-submodules
    prepare_tarball pmm-admin
    prepare_tarball pmm-agent
    prepare_tarball mongodb_exporter
    prepare_tarball mysqld_exporter
    prepare_tarball postgres_exporter
    prepare_tarball proxysql_exporter
    prepare_tarball node_exporter
    prepare_tarball clickhouse_exporter
    prepare_tarball rds_exporter

    prepare_tarball percona-toolkit
    repack_toolkit

    tar -C $(dirname ${source_dir}) -zcpf ${source_tarball} $(basename ${source_dir})
}

main
exit 0

# vim: expandtab shiftwidth=4 tabstop=4
