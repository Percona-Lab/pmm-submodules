---
- hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Packages                   | Add Percona repository
      when: ansible_os_family == 'RedHat'
      yum:
        name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
        state: installed

    - name: Packages                   | Add Nginx repository
      yum_repository:
        name: nginx
        description: nginx repo
        baseurl: http://nginx.org/packages/mainline/centos/7/$basearch/
        gpgcheck: no
        enabled: yes

    - name: Packages                   | Add PMM Server YUM repository
      yum_repository:
        name: pmm2-laboratory
        description: PMM Server YUM repository - x86_64
        baseurl: https://repo.percona.com/pmm2-components/yum/laboratory/7/RPMS/x86_64/
        gpgcheck: yes
        enabled: no
        gpgkey: file:///etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY

# !!! WARNING _experimental_ has to be replaced by _release_ after GA
    - name: Postgres                   | Add PostgreSQL YUM repository
      when: ansible_os_family == 'RedHat'
      yum_repository:
        name: percona-ppg-11-experimental
        description: PostgreSQL YUM repository - x86_64
        baseurl: http://repo.percona.com/ppg-11/yum/experimental/7/RPMS/x86_64
        gpgcheck: yes
        enabled: yes
        gpgkey: file:///etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY

    - name: Packages                   | Update OS
      when: ansible_os_family == 'RedHat'
      yum:
        name: '*'
        state: latest
        exclude: 'ansible'
        disablerepo: percona-release-x86_64

    - name: Packages                   | Install OS tools
      when: ansible_os_family == 'RedHat'
      yum:
        name:
          - screen
          - yum-utils
          - yum-cron
          - logrotate
          - unzip
          - python2-pip

    - name: Install supervisor         | Install supervisor 3.4.0
      when: ansible_os_family == 'RedHat'
      pip:
        name: supervisor==3.4.0

    - name: Configure supervisor       | Create a defult configuration file for supervisord
      shell: echo_supervisord_conf > /etc/supervisord.conf

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: include
        option: files
        value: supervisord.d/*.ini

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: unix_http_server
        option: file
        value: /var/run/supervisor/supervisor.sock

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisord
        option: logfile
        value: /var/log/supervisor/supervisord.log

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisord
        option: pidfile
        value: /var/run/supervisord.pid

    - name: Modify supervisord.conf
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisorctl
        option: serverurl
        value: unix:///var/run/supervisor/supervisor.sock

    - name: Configure supervisor        | Create dirs
      file: path={{ item }} state=directory mode='0770'
      with_items:
        - /var/log/supervisor
        - /var/run/supervisor

    - name: Configure supervisor        | Create dirs
      file:
        path: /etc/supervisord.d
        mode: '0755'
        state: directory

    - name: Configure supervisor       | Add logrotate.d config
      copy:
        content: |
          /var/log/supervisor/*.log {
                  missingok
                  weekly
                  notifempty
                  nocompress
          }
        dest: /etc/logrotate.d/supervisor
        mode: 0644

    - name: cloud-init                 | Create dirs
      file: path={{ item }} state=directory
      with_items:
        - /var/lib/cloud/scripts/per-once
        - /var/lib/cloud/scripts/per-boot

    - name: cloud-init                 | Create dirs
      file: path={{ item }} state=directory owner=pmm
      with_items:
        - /srv/prometheus/data
        - /srv/prometheus/rules
        - /srv/logs

    - name: cloud-init                 | Create dirs due to https://github.com/yandex/ClickHouse/pull/3785
      file: path={{ item }} state=directory owner=root
      with_items:
        - /srv/clickhouse

    - name: cloud-init                 | Configure yum-cron
      replace:
        dest: /etc/yum/yum-cron-hourly.conf
        regexp: 'update_cmd = default'
        replace: 'update_cmd = minimal-security'

    - name: cloud-init                 | Configure yum-cron
      replace:
        dest: /etc/yum/yum-cron.conf
        regexp: 'update_cmd = default'
        replace: 'update_cmd = minimal-security'

    - name: Percona Server for MySQL   | Remove MariaDB Client
      when: ansible_os_family == 'RedHat'
      yum: name=mariadb-libs state=absent

    - name: PMM                        | Create grafana group
      group:
        gid: 996
        name: grafana

    - name: PMM                        | Create grafana user
      user:
        uid: 996
        name: grafana
        group: grafana
        home: /etc/grafana
        shell: /sbin/nologin

    - name: Postgres                   | Install Postgres
      when: ansible_os_family == 'RedHat'
      yum:
        name:
          - percona-postgresql11-server
          - percona-postgresql11-contrib
          - percona-postgresql11
          - python-psycopg2
        state: installed

    - name: PMM                        | Add PMM Server YUM repository
      when: ansible_os_family == 'RedHat'
      yum_repository:
        name: pmm
        description: PMM Server YUM repository - x86_64
        baseurl: https://repo.percona.com/pmm/7/RPMS/x86_64/
        gpgcheck: yes
        enabled: no
        gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Percona

    - name: PMM                        | Add local YUM repository
      when: ansible_os_family == 'RedHat'
      yum_repository:
        name: local
        description: Local YUM repository - x86_64
        baseurl: file:///tmp/RPMS
        gpgcheck: no
        enabled: no

    - name: PMM                        | Install RPMs
      when: ansible_os_family == 'RedHat'
      yum:
        name:
          - nginx-1.15.8
          - percona-grafana
          - percona-prometheus
          - percona-qan-api2
          - percona-qan-app
          - percona-toolkit-3.0.10
          - percona-dashboards
          - pmm-server
          - pmm2-client
          - pmm-manage
          - pmm-managed
          - pmm-update
          - percona-clickhouse-client
          - percona-clickhouse-server
        enablerepo: local

    - name: PMM                        | Fix nginx default config
      replace:
        dest: /etc/nginx/conf.d/default.conf
        regexp: 'listen       80'
        replace: 'listen       8080'

    - name: NGINX SSL Certificate      | Add script
      copy:
        content: |
          #!/bin/sh

          set -o errexit

          mkdir -p /srv/nginx

          if [ ! -e /srv/nginx/dhparam.pem ]; then
              openssl dhparam -out /srv/nginx/dhparam.pem 2048
          fi

          if [ ! -e /srv/nginx/ca-certs.pem ]; then
              # Fetch letsencrypt chain
              curl https://letsencrypt.org/certs/isrgrootx1.pem                          > /srv/nginx/ca-certs.pem
              curl https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.pem       >> /srv/nginx/ca-certs.pem
              curl https://letsencrypt.org/certs/letsencryptauthorityx1.pem             >> /srv/nginx/ca-certs.pem
              curl https://www.identrust.com/certificates/trustid/root-download-x3.html >> /srv/nginx/ca-certs.pem
          fi

          if [ ! -e /srv/nginx/certificate.conf ]; then
              echo "
          [ req ]
          distinguished_name = req_distinguished_name
          prompt             = no

          [ req_distinguished_name ]
          O                  = Main Org.
          " > /srv/nginx/certificate.conf
          fi

          if [ ! -e /srv/nginx/certificate.key -o ! -e /srv/nginx/certificate.crt ]; then
              openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
                  -keyout /srv/nginx/certificate.key \
                  -out    /srv/nginx/certificate.crt \
                  -config /srv/nginx/certificate.conf
          fi
        dest: /var/lib/cloud/scripts/per-boot/generate-ssl-certificate
        mode: 0755

    - name: NGINX SSL Certificate      | Check certificate file
      stat: path=/srv/nginx/certificate.crt
      register: certificate_file

    - name: NGINX SSL Certificate      | Generate certificate
      when: not certificate_file.stat.exists
      command: /var/lib/cloud/scripts/per-boot/generate-ssl-certificate

    - name: Grafana                    | Check data dir
      stat: path=/srv/grafana/grafana.db
      register: grafana_db

    - name: Grafana                    | Disable Anonymous access
      when: not grafana_db.stat.exists
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: auth.anonymous
        option: enabled
        value: 'false'

    - name: Grafana                    | Set snapshot server
      when: not grafana_db.stat.exists
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_enabled
        value: 'true'

    - name: Grafana                    | Set snapshot server
      when: not grafana_db.stat.exists
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_url
        value: https://snapshots-g504.percona.com

    - name: Grafana                    | Set snapshot server
      when: not grafana_db.stat.exists
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_name
        value: Share with Percona

    - name: supervisor                 | Fix credentials
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisorctl
        option: username
        value: dummy

    - name: supervisor                 | Fix credentials
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisorctl
        option: password
        value: dummy

    - name: Postgres                   | Create Postgres data dir
      file: path={{ item }} state=directory owner=postgres group=postgres
      with_items:
        - /srv/postgres

    - name: Postgres                   | Create Postgres data cluster
      command: su postgres -c "/usr/pgsql-11/bin/initdb -D /srv/postgres"

    - name: Postgres                   | Create Postgres log file
      copy:
        content: ""
        dest: /srv/logs/postgres.log
        force: no
        group: postgres
        owner: postgres
        mode: 0644
