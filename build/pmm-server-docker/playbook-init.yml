---
- hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: cloud-init                 | Create dirs
      file: path={{ item }} state=directory owner=pmm group=pmm
      with_items:
        - /srv/prometheus/data
        - /srv/collect_info
        - /srv/logs

    - name: PMM                        | Create dirs
      file: path={{ item }} state=directory owner=root group=pmm
      with_items:
        - /srv/clickhouse

    - name: NGINX                      | Disable daemon
      lineinfile:
        dest: /etc/nginx/nginx.conf
        line: 'daemon off;'

    - name: NGINX                      | Disable password-page
      replace:
        dest: /etc/nginx/conf.d/pmm.conf
        regexp: 'setup_type ovf-ami'
        replace: 'setup_type docker'

    - name: PMM                        | Fix nginx config
      replace:
        dest: /etc/nginx/nginx.conf
        regexp: '^(\s*)listen'
        replace: '\1#listen'

    - name: Grafana                    | Enable gzip
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: server
        option: enable_gzip
        value: true

    - name: PMM                        | Start services
      shell: supervisord -c /etc/supervisord.conf &

    - name: PMM                        | Wait for postgres start
      wait_for:
        port: 5432
        state: present
        delay: 30
        timeout: 60

    - name: pmm-managed                | Create PostgreSQL database
      postgresql_db:
        name: pmm-managed
        state: present

    - name: pmm-managed                | Create PostgreSQL user
      postgresql_user:
        db: pmm-managed
        name: pmm-managed
        password: 'md5da757ec3e22c6d86a2bb8e70307fa937'
        priv: 'ALL'
        expires: infinity
        state: present

    - name: qan-api                    | Fix DSN
      replace:
        dest: /etc/percona-qan-api.conf
        regexp: 'percona:percona'
        replace: 'qan-api:5goldenfipar'

    - name: PMM                        | Wait for dashboards
      wait_for:
        path: /srv/grafana/PERCONA_DASHBOARDS_VERSION
        state: present

    - name: Grafana                    | Add community panels
      unarchive:
        src: "{{ item }}"
        dest: /var/lib/grafana/plugins
        remote_src: yes
      with_fileglob:
        - "/usr/share/percona-dashboards/panels/*.zip"

    - name: PMM                        | Create ClickHouse database
      command: clickhouse-client --query="CREATE DATABASE IF NOT EXISTS pmm"

    - name: PMM                        | Show ClickHouse database
      command: clickhouse-client --query="SHOW DATABASES"

    - name: PMM                        | Create pmm-update dirs
      file: path={{ item }} state=directory
      with_items:
        - /srv/update

    - name: PMM                        | Check pmm-update
      stat: path=/srv/update/main.yml
      register: pmm_update_file

    - name: PMM                        | Enable testing repo for pmm-client and percona-toolkit
      when: not pmm_update_file.stat.exists
      command: yum-config-manager --enable percona-testing-x86_64 --enable pmm-laboratory

    - name: PMM                        | Run pmm-update
      when: not pmm_update_file.stat.exists
      command: env EXTRA_ARGS='--extra-vars image_creation=1' /usr/bin/pmm-update-stage2

    - name: PMM                        | Enable testing repo for pmm-client and percona-toolkit
      when: not pmm_update_file.stat.exists
      command: yum-config-manager --disable percona-testing-x86_64 --disable pmm-laboratory

    - name: PMM                        | Stop services
      shell: supervisorctl shutdown

    - name: PMM                        | Cleanup yum cache
      shell: yum clean all

    - name: PMM                        | Cleanup logs
      file: path={{ item }} state=absent
      with_items:
        - /srv/logs/clickhouse.log
        - /srv/logs/createdb.log
        - /srv/logs/cron.log
        - /srv/logs/dashboard-upgrade.log
        - /srv/logs/nginx.log
        - /srv/logs/node_exporter.log
        - /srv/logs/prometheus.log
        - /srv/logs/prometheus1.log
        - /srv/logs/qan-api.log
        - /var/log/yum.log
        - /var/log/grafana/grafana.log
        - /var/log/supervisor/supervisord.log
        - /var/logs/pmm-manage.log
        - /srv/prometheus/data
        - /tmp/RPMS

    - name: cloud-init                 | Create dirs
      file: path={{ item }} state=directory owner=pmm group=pmm
      with_items:
        - /srv/prometheus/data
        - /srv/logs
