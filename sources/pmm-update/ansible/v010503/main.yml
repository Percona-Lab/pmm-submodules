# v1.5.3
---
- hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: PMM                        | Stat supervisor
      stat: path=/usr/bin/supervisorctl
      register: supervisorctl

    - name: PMM                        | Clean YUM cache
      command: /usr/bin/yum --enablerepo=pmm clean all
      changed_when: False

    - name: PMM                        | Backup configuration
      command: /usr/share/pmm-update/helpers/backup-password

    - name: PMM                        | Remove RPMs
      when: ansible_os_family == 'RedHat'
      yum: name={{ item }} state=absent
      with_items:
        - percona-qan-app2
        - percona-node_exporter-0.13.0

    - name: PMM                        | Stat purge-qan-data backup
      stat: path=/srv/update/purge-qan-data-backup
      register: purge_qan_data_backup

    - name: PMM                        | Backup unmanaged configs
      when: not purge_qan_data_backup.stat.exists
      copy: src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: '/etc/orchestrator.conf.json',    dest: '/srv/update/orchestrator.conf.json-backup' }
        - { src: '/etc/cron.daily/purge-qan-data', dest: '/srv/update/purge-qan-data-backup' }
        - { src: '/etc/grafana/grafana.ini',       dest: '/srv/update/grafana-backup' }

    - name: PMM                        | Update pmm-server RPM
      when: ansible_os_family == 'RedHat'
      yum: name={{ item }} state=present enablerepo=pmm
      with_items:
        - pmm-server-1.5.3
      register: pmm_server_update
      failed_when: "pmm_server_update | failed and 'Error in PREUN scriptlet in rpm package pmm-server' not in pmm_server_update.msg"

    - name: NGINX                      | Disable password-page
      when: supervisorctl.stat.exists
      replace:
        dest: /etc/nginx/conf.d/pmm.conf
        regexp: '/usr/share/pmm-server/password-page'
        replace: '/usr/share/pmm-server/landing-page'

    - name: PMM                        | PMM-1826 Remove broken 1.5.0 rpms
      command: sh -c "/usr/bin/rpm --erase --noscripts pmm-server-1.5.0 || :"

    - name: PMM                        | PMM-1826 Remove broken 1.5.1 rpms
      command: sh -c "/usr/bin/rpm --erase --noscripts pmm-server-1.5.1 || :"

    - name: PMM                        | Install RPMs
      when: ansible_os_family == 'RedHat'
      yum: name={{ item }} state=present enablerepo=pmm
      with_items:
        - nginx
        - pmm-update
        - percona-toolkit-3.0.5
        - percona-dashboards-1.5.3
        - pmm-server-1.5.3
        - pmm-client-1.5.3
        - percona-orchestrator-2.1.5
        - percona-prometheus-1.8.2
        - percona-qan-api-1.5.3
        - percona-grafana-4.6.1
        - percona-qan-app-1.5.3
        - pmm-manage-1.5.3
        - pmm-managed-1.5.3
        - percona-consul-0.8.5
        - rds_exporter-1.5.3

    - name: PMM                        | Restore unmanaged configs
      copy: src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: '/srv/update/orchestrator.conf.json-backup', dest: '/etc/orchestrator.conf.json' }
        - { src: '/srv/update/purge-qan-data-backup',         dest: '/etc/cron.daily/purge-qan-data' }
        - { src: '/srv/update/grafana-backup',                dest: '/etc/grafana/grafana.ini' }

    - name: PMM                        | Remove temporary files
      command: /usr/bin/shred --remove /srv/update/orchestrator.conf.json-backup /srv/update/purge-qan-data-backup /srv/update/grafana-backup

    - name: PMM                        | Restore configuration
      command: bash -c "/usr/bin/pmm-configure -grafana-db-path $(ls /srv/grafana/grafana.db /var/lib/grafana/grafana.db 2>/dev/null)"

    - name: qan-api                    | Fix QAN API DSN
      when: supervisorctl.stat.exists
      replace:
        dest: /etc/percona-qan-api.conf
        regexp: 'percona:percona'
        replace: 'qan-api:5goldenfipar'

    - name: qan-api                    | Fix QAN API DSN
      when: not supervisorctl.stat.exists
      replace:
        dest: /etc/percona-qan-api.conf
        regexp: 'qan-api:5goldenfipar'
        replace: 'percona:percona'

    - name: NGINX                      | Disable daemon
      when: supervisorctl.stat.exists
      lineinfile:
        dest: /etc/nginx/nginx.conf
        line: 'daemon off;'

    - name: NGINX                      | Disable password-page
      when: supervisorctl.stat.exists
      replace:
        dest: /etc/nginx/conf.d/pmm.conf
        regexp: '/usr/share/pmm-server/password-page'
        replace: '/usr/share/pmm-server/landing-page'

    - name: NGINX                      | Fix nginx config
      replace:
        dest: /etc/nginx/nginx.conf
        regexp: '^(\s*)listen'
        replace: '\1#listen'

    - name: Security                   | Stat sshd_config
      stat: path=/etc/ssh/sshd_config
      register: sshd_config

    - name: Security                   | Disable root SSH access
      when: sshd_config.stat.exists
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present

    - name: Security                   | Remove percona key
      lineinfile:
        dest: /root/.ssh/authorized_keys
        regexp: '([Pp]acker|[Mm]ykola|[Pp]ercona)'
        state: absent

    - name: Security                   | Remove centos user
      when: keep_centos_user is not defined
      user:
        name: centos
        state: absent
        remove: yes

    - name: pmm-managed                | Create MySQL pmm-managed database
      mysql_db:
        name: pmm-managed
        state: present

    - name: pmm-managed                | Create MySQL pmm-managed user
      mysql_user:
        name: pmm-managed
        host: localhost
        password: '*816FFB19BC44AC2749D546E48FA0DF957EDB2C5A'
        priv: 'pmm-managed.*:ALL'
        encrypted: yes
        state: present

    - name: Hotfix                     | PMM-1232 Fix prometheus memory
      when: supervisorctl.stat.exists
      replace:
        dest: /etc/supervisord.d/pmm.ini
        regexp: '-storage.local.target-heap-size=268435456$'
        replace: '-storage.local.target-heap-size=766957568'

    - name: PMM                        | Prometheus METRICS_RESOLUTION
      when: supervisorctl.stat.exists and image_creation is not defined
      command: sh -c 'sed -i "s/1s/${METRICS_RESOLUTION:-1s}/" /etc/prometheus.yml'

    - name: PMM                        | Prometheus METRICS_RETENTION
      when: supervisorctl.stat.exists and image_creation is not defined
      command: sh -c 'sed -i "s/ENV_METRICS_RETENTION/${METRICS_RETENTION:-720h}/" /etc/supervisord.d/pmm.ini'

    - name: PMM                        | Prometheus METRICS_MEMORY
      when: supervisorctl.stat.exists and image_creation is not defined
      command: sh -c 'sed -i "s/ENV_METRICS_MEMORY_MULTIPLIED/$(( ${METRICS_MEMORY:-748982} * 1024 ))/" /etc/supervisord.d/pmm.ini'

    - name: PMM                        | Orchestrator enabled
      when: supervisorctl.stat.exists and image_creation is not defined
      command: sh -c 'sed -i "s/autostart = false/autostart = ${ORCHESTRATOR_ENABLED:-false}/" /etc/supervisord.d/pmm.ini'

    - name: PMM                        | Orchestrator ORCHESTRATOR_USER
      when: supervisorctl.stat.exists and image_creation is not defined
      command: sh -c 'sed -i "s/orc_client_user/${ORCHESTRATOR_USER:-orc_client_user}/" /etc/orchestrator.conf.json'

    - name: PMM                        | Orchestrator ORCHESTRATOR_PASSWORD
      when: supervisorctl.stat.exists and image_creation is not defined
      command: sh -c 'sed -i "s/orc_client_password/${ORCHESTRATOR_PASSWORD:-orc_client_password}/" /etc/orchestrator.conf.json'

    - name: PMM                        | Cron QUERIES_RETENTION
      when: supervisorctl.stat.exists and image_creation is not defined
      command: sh -c 'sed -i "s/^INTERVAL=.*/INTERVAL=${QUERIES_RETENTION:-8}/" /etc/cron.daily/purge-qan-data'

    - name: PMM                        | Reload config (supervisord)
      when: supervisorctl.stat.exists
      command: /usr/bin/supervisorctl update

    - name: PMM                        | Restart services (supervisord)
      when: supervisorctl.stat.exists
      command: /usr/bin/supervisorctl restart {{ item }}
      with_items:
        - orchestrator
        - prometheus
        - node_exporter
        - qan-api
        - grafana
        - consul
        - pmm-managed

    - name: PMM                        | Restart services (systemd)
      when: not supervisorctl.stat.exists
      service: name={{ item }} state=restarted
      with_items:
        - orchestrator
        - prometheus
        - node_exporter
        - percona-qan-api
        - grafana-server
        - consul
        - pmm-managed
        - sshd

    - name: PMM                        | Import dashboards
      command: bash -c "/usr/share/percona-dashboards/import-dashboards.py $(dirname $(ls /srv/grafana/grafana.db /var/lib/grafana/grafana.db 2>/dev/null))"
      register: import_result
      changed_when: "'up-to-date' not in import_result.stdout"

    - name: PMM                        | Restart pmm-manage daemon (delayed)
      shell: cd /tmp; nohup sh -c 'sleep 10; test -e /usr/bin/supervisorctl && /usr/bin/supervisorctl restart pmm-manage nginx || (/usr/sbin/nginx -s reload; /bin/systemctl restart pmm-manage)' </dev/null >/dev/null 2>&1 &
