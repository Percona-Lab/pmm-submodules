# v1.1.3
---
- hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: PMM                        | Clean YUM cache
      command: /usr/bin/yum --enablerepo=pmm clean all
      changed_when: False

    - name: PMM-793 temp workaround    | Backup configs
      copy: src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: '/etc/prometheus.yml',            dest: '/tmp/prometheus.yml-backup' }
        - { src: '/etc/orchestrator.conf.json',    dest: '/tmp/orchestrator.conf.json-backup' }
        - { src: '/etc/cron.daily/purge-qan-data', dest: '/tmp/purge-qan-data-backup' }

    - name: PMM                        | Install RPMs
      when: ansible_os_family == 'RedHat'
      yum: name={{ item }} state=present enablerepo=pmm
      with_items:
        - nginx
        - pmm-update
        - percona-toolkit-3.0.1
        - percona-dashboards-1.1.3
        - pmm-server-1.1.3
        - percona-orchestrator-2.1.0
        - percona-prometheus-1.6.1
        - percona-node_exporter-0.13.0
        - percona-qan-api-1.1.3
        - percona-grafana-4.2.0
        - percona-qan-app-1.1.3
        - pmm-manage-1.1.3
        - percona-consul-0.8.1

    - name: PMM-793 temp workaround    | Restore configs
      copy: src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: '/tmp/prometheus.yml-backup',         dest: '/etc/prometheus.yml' }
        - { src: '/tmp/orchestrator.conf.json-backup', dest: '/etc/orchestrator.conf.json' }
        - { src: '/tmp/purge-qan-data-backup',         dest: '/etc/cron.daily/purge-qan-data' }

    - name: PMM-793 temp workaround    | Remove tmp files with credetials
      command: /usr/bin/shred --remove /tmp/prometheus.yml-backup /tmp/orchestrator.conf.json-backup /tmp/purge-qan-data-backup

    - name: PMM                        | Stat supervisor
      stat: path=/usr/bin/supervisorctl
      register: supervisorctl

    - name: NGINX                      | Disable daemon
      when: supervisorctl.stat.exists
      lineinfile:
        dest: /etc/nginx/nginx.conf
        line: 'daemon off;'

    - name: NGINX                      | Disable password-page
      when: supervisorctl.stat.exists
      replace:
        dest: /etc/nginx/conf.d/pmm.conf
        regexp: '/usr/share/pmm-server/password-page'
        replace: '/usr/share/pmm-server/landing-page'

    - name: NGINX                      | Fix nginx config
      replace:
        dest: /etc/nginx/nginx.conf
        regexp: '^(\s*)listen'
        replace: '\1#listen'

    - name: PMM                        | Import dashboards
      command: bash -c "/usr/share/percona-dashboards/import-dashboards.py $(dirname $(ls /srv/grafana/grafana.db /var/lib/grafana/grafana.db 2>/dev/null))"
      register: import_result
      changed_when: "'up-to-date' not in import_result.stdout"

    - name: PMM                        | Restart services (supervisord)
      when: supervisorctl.stat.exists
      command: /usr/bin/supervisorctl restart all

    - name: PMM                        | Restart services (systemd)
      when: not supervisorctl.stat.exists
      service: name={{ item }} state=restarted
      with_items:
        - orchestrator
        - prometheus
        - node_exporter
        - percona-qan-api
        - grafana-server
        - consul
